{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D9\\u05D5\\u05E1\\u05D9\\\\Desktop\\\\mern\\\\shopApp\\\\frontend\\\\src\\\\screens\\\\UserEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getUserDetails } from '../actions/userActions';\nimport FormContainer from '../components/FormContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserEditScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const userId = match.params.id;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  useEffect(() => {\n    if (!user.name || user._id !== userId) {\n      dispatch(getUserDetails(userId));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setIsAdmin(user.isAdmin);\n    }\n  }, [dispatch]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/userlist\",\n      className: \"btn btn-light my-3\",\n      children: \"Go back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 28\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 48\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"isAdmin\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: \"Is Admin\",\n            checked: isAdmin,\n            onChange: e => setIsAdmin(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserEditScreen, \"BBmTFFI1i0+6pzdAc40K5yg3TKA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UserEditScreen;\nexport default UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"sources":["C:/Users/יוסי/Desktop/mern/shopApp/frontend/src/screens/UserEditScreen.js"],"names":["React","useState","useEffect","Button","Form","Message","Loader","useDispatch","useSelector","Link","getUserDetails","FormContainer","UserEditScreen","match","history","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","loading","error","user","_id","submitHandler","e","preventDefault","target","value","checked"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;;;AAGA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAwB;AAAA;;AAC3C,QAAMC,MAAM,GAAGF,KAAK,CAACG,MAAN,CAAaC,EAA5B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMuB,QAAQ,GAAGjB,WAAW,EAA5B;AAEA,QAAMkB,WAAW,GAAGjB,WAAW,CAAEkB,KAAD,IAAWA,KAAK,CAACD,WAAlB,CAA/B;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BJ,WAAjC;AAEAvB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAAC2B,IAAI,CAACX,IAAN,IAAcW,IAAI,CAACC,GAAL,KAAaf,MAA9B,EAAqC;AACjCS,MAAAA,QAAQ,CAACd,cAAc,CAACK,MAAD,CAAf,CAAR;AACH,KAFD,MAEK;AACDI,MAAAA,OAAO,CAACU,IAAI,CAACX,IAAN,CAAP;AACAG,MAAAA,QAAQ,CAACQ,IAAI,CAACT,KAAN,CAAR;AACAG,MAAAA,UAAU,CAACM,IAAI,CAACP,OAAN,CAAV;AACH;AACA,GARI,EAQF,CAACE,QAAD,CARE,CAAT;;AAWA,QAAMO,aAAa,GAAIC,CAAD,IAAM;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,iBAAT;AAA2B,MAAA,SAAS,EAAC,oBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,aAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKN,OAAO,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAAH,GAAeC,KAAK,gBAAG,QAAC,OAAD;AAAS,QAAA,OAAO,EAAC,QAAjB;AAAA,kBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,cAAH,gBACxB,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEG,aAAhB;AAAA,gCACA,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACA,YAAA,IAAI,EAAC,MADL;AAEA,YAAA,WAAW,EAAC,YAFZ;AAGA,YAAA,KAAK,EAAEb,IAHP;AAGa,YAAA,QAAQ,EAAGc,CAAD,IACvBb,OAAO,CAACa,CAAC,CAACE,MAAF,CAASC,KAAV;AAJP;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eASA,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,OAAtB;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACA,YAAA,IAAI,EAAC,OADL;AAEA,YAAA,WAAW,EAAC,aAFZ;AAGA,YAAA,KAAK,EAAEf,KAHP;AAGc,YAAA,QAAQ,EAAGY,CAAD,IACxBX,QAAQ,CAACW,CAAC,CAACE,MAAF,CAASC,KAAV;AAJR;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATA,eAiBA,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,SAAtB;AAAA,iCACI,QAAC,IAAD,CAAM,KAAN;AACA,YAAA,IAAI,EAAC,UADL;AAEA,YAAA,KAAK,EAAC,UAFN;AAGA,YAAA,OAAO,EAAEb,OAHT;AAIA,YAAA,QAAQ,EAAGU,CAAD,IACVT,UAAU,CAACS,CAAC,CAACE,MAAF,CAASE,OAAV;AALV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAjBA,eA2BA,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3BA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAwCH,CAlED;;GAAMxB,c;UAMeL,W,EAEGC,W;;;KARlBI,c;AAoEN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect} from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport { getUserDetails } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    useEffect(() => {\r\n        if(!user.name || user._id !== userId){\r\n            dispatch(getUserDetails(userId))\r\n        }else{\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n            setIsAdmin(user.isAdmin)\r\n        }\r\n        }, [dispatch])\r\n    \r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light my-3'>Go back</Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control \r\n                        type='text' \r\n                        placeholder='Enter name' \r\n                        value={name} onChange={(e) => \r\n                        setName(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control \r\n                        type='email' \r\n                        placeholder='Enter email' \r\n                        value={email} onChange={(e) => \r\n                        setEmail(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='isAdmin'>\r\n                        <Form.Check \r\n                        type='checkbox'\r\n                        label='Is Admin'\r\n                        checked={isAdmin}\r\n                        onChange={(e) =>\r\n                        setIsAdmin(e.target.checked)}>\r\n                        </Form.Check>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>Update</Button>\r\n                </Form>\r\n                )}\r\n                \r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n"]},"metadata":{},"sourceType":"module"}