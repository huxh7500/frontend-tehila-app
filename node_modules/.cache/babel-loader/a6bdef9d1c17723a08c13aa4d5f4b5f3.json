{"ast":null,"code":"import { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL } from '../constants/orderConstams';\nimport axios from 'axios';\nconst API = 'http://localhost:5000';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${API}/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`${API}/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`${API}/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/יוסי/Desktop/mern/shopApp/frontend/src/actions/orderActions.js"],"names":["ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","axios","API","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","getOrderDetails","id","get","payOrder","orderId","paymentResult","put"],"mappings":"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","sourcesContent":["import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    } from '../constants/orderConstams'\r\nimport axios from 'axios'\r\n\r\nconst API = 'http://localhost:5000'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState )=>{\r\n    try{\r\n        dispatch( { type: ORDER_CREATE_REQUEST })\r\n\r\n        const { userLogin:{ userInfo} } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.post(`${API}/api/orders`, order, config)\r\n        dispatch( { \r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n         }) \r\n    }catch (error){\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.response\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState )=>{\r\n    try{\r\n        dispatch( { type: ORDER_DETAILS_REQUEST })\r\n\r\n        const { userLogin:{ userInfo} } = getState()\r\n        const config = {\r\n            headers:{\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`${API}/api/orders/${id}`, config)\r\n        dispatch( { \r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n         }) \r\n    }catch (error){\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: \r\n            error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.response\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState )=>{\r\n    try{\r\n        dispatch( { type: ORDER_PAY_REQUEST })\r\n\r\n        const { userLogin:{ userInfo} } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`${API}/api/orders/${orderId}/pay`, paymentResult, config)\r\n        dispatch( { \r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n         }) \r\n    }catch (error){\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: \r\n            error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.response\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}