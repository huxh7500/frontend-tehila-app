{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailstReducer, productDeleteReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailstReducer,\n  productDelete: productDeleteReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/יוסי/Desktop/mern/shopApp/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailstReducer","productDeleteReducer","cartReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","reducer","productList","productDetails","productDelete","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderListMy","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,kBAAT,EACSC,sBADT,EAESC,oBAFT,QAEqC,4BAFrC;AAGA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,kBAAT,EACSC,mBADT,EAESC,eAFT,EAGSC,kBAHT,QAGmC,0BAHnC;AAIA,SAASC,gBAAT,EACSC,mBADT,EAESC,kBAFT,EAGSC,wBAHT,EAISC,eAJT,EAKSC,iBALT,EAMSC,iBANT,QAMkC,yBANlC;AAQA,MAAMC,OAAO,GAAGnB,eAAe,CAAC;AAC5BoB,EAAAA,WAAW,EAAEhB,kBADe;AAE5BiB,EAAAA,cAAc,EAAEhB,sBAFY;AAG5BiB,EAAAA,aAAa,EAAEhB,oBAHa;AAI5BiB,EAAAA,IAAI,EAAEhB,WAJsB;AAK5BiB,EAAAA,SAAS,EAAEZ,gBALiB;AAM5Ba,EAAAA,YAAY,EAAEZ,mBANc;AAO5Ba,EAAAA,WAAW,EAAEZ,kBAPe;AAQ5Ba,EAAAA,iBAAiB,EAAEZ,wBARS;AAS5Ba,EAAAA,QAAQ,EAAEZ,eATkB;AAU5Ba,EAAAA,UAAU,EAAEZ,iBAVgB;AAW5Ba,EAAAA,UAAU,EAAEZ,iBAXgB;AAY5Ba,EAAAA,WAAW,EAAEvB,kBAZe;AAa5BwB,EAAAA,YAAY,EAAEvB,mBAbc;AAc5BwB,EAAAA,QAAQ,EAAEvB,eAdkB;AAe5BwB,EAAAA,WAAW,EAAEvB;AAfe,CAAD,CAA/B;AAkBA,MAAMwB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GAE/B,EAFJ;AAIA,MAAMK,YAAY,GAAG;AACnBnB,EAAAA,IAAI,EAAE;AACJoB,IAAAA,SAAS,EAAER,oBADP;AAEJS,IAAAA,eAAe,EAAEH;AAFb,GADa;AAKnBjB,EAAAA,SAAS,EAAE;AAAEqB,IAAAA,QAAQ,EAAEL;AAAZ;AALQ,CAArB;AAQA,MAAMM,UAAU,GAAG,CAAC5C,KAAD,CAAnB;AAEA,MAAM6C,KAAK,GAAGhD,WAAW,CAACoB,OAAD,EAAUuB,YAAV,EAAwBvC,mBAAmB,CAC/DF,eAAe,CAAC,GAAG6C,UAAJ,CADgD,CAA3C,CAAzB;AAGI,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport { productListReducer,\r\n         productDetailstReducer,\r\n         productDeleteReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { orderCreateReducer,\r\n         orderDetailsReducer,\r\n         orderPayReducer,\r\n         orderListMyReducer } from './reducers/orderReducers'\r\nimport { userLoginReducer,\r\n         userRegisterReducer,\r\n         userDetailsReducer,\r\n         userUpdateProfileReducer,\r\n         userListReducer,\r\n         userDeleteReducer,\r\n         userUpdateReducer } from './reducers/userReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailstReducer,\r\n    productDelete: productDeleteReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer, \r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools\r\n    (applyMiddleware(...middleware)))\r\n\r\n    export default store"]},"metadata":{},"sourceType":"module"}