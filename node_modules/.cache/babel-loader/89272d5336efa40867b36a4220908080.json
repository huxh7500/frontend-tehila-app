{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_DETAILS_RESET, ORDER_DETAILS_RESET } from '../constants/userConstants';\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstams';\nimport axios from 'axios';\nconst API = 'http://localhost:5000';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${API}/api/users/login`, {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${API}/api/users`, {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_RESET\n    });\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`${API}/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`${API}/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/יוסי/Desktop/mern/shopApp/frontend/src/actions/userActions.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_DETAILS_RESET","ORDER_DETAILS_RESET","ORDER_LIST_MY_RESET","axios","API","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put"],"mappings":"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","sourcesContent":["import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_DETAILS_RESET,\r\n    ORDER_DETAILS_RESET,\r\n    } from '../constants/userConstants'\r\nimport {ORDER_LIST_MY_RESET} from '../constants/orderConstams'\r\n\r\nimport axios from 'axios'\r\n\r\nconst API = 'http://localhost:5000'\r\n\r\nexport const login = (email, password) => async (dispatch)=>{\r\n    try{\r\n        dispatch( { type: USER_LOGIN_REQUEST })\r\n        const config = {\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.post(`${API}/api/users/login`, {email, password}, config)\r\n        dispatch( { \r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n         })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }catch (error){\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: \r\n            error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.response\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () =>(dispatch) =>{\r\n    localStorage.removeItem('userInfo')\r\n    dispatch( { type: USER_LOGOUT })\r\n    dispatch( { type: USER_DETAILS_RESET })\r\n    dispatch( { type: ORDER_LIST_MY_RESET })\r\n}\r\n\r\nexport const register = (name ,email, password) => async (dispatch)=>{\r\n    try{\r\n        dispatch( { type: USER_REGISTER_REQUEST })\r\n        const config = {\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.post(`${API}/api/users`, {name ,email, password}, config)\r\n        dispatch( { \r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n         })\r\n        dispatch( { \r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })  \r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }catch (error){\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: \r\n            error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.response\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState )=>{\r\n    try{\r\n        dispatch( { type: ORDER_DETAILS_RESET })\r\n        dispatch( { type: USER_DETAILS_REQUEST })\r\n\r\n        const { userLogin:{ userInfo} } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`${API}/api/users/${id}`, config)\r\n        dispatch( { \r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n         }) \r\n    }catch (error){\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: \r\n            error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.response\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState )=>{\r\n    try{\r\n        dispatch( { type: USER_UPDATE_PROFILE_REQUEST })\r\n\r\n        const { userLogin:{ userInfo} } = getState()\r\n        const config = {\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`${API}/api/users/profile`, user, config)\r\n        dispatch( { \r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n         }) \r\n    }catch (error){\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: \r\n            error.response && error.response.data.message \r\n            ? error.response.data.message \r\n            : error.response\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}